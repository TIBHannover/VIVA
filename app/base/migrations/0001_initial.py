# Generated by Django 2.2.5 on 2019-09-23 14:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('basepath', models.CharField(max_length=300, unique=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'collection',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Concepttype',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'concepttype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dataset',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=300, unique=True)),
                ('collectionid', models.ForeignKey(db_column='collectionid', on_delete=django.db.models.deletion.PROTECT, to='base.Collection')),
            ],
            options={
                'db_table': 'image',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(max_length=300, unique=True)),
                ('thumbbasepath', models.CharField(max_length=300, unique=True)),
                ('frames', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('collectionid', models.ForeignKey(db_column='collectionid', on_delete=django.db.models.deletion.PROTECT, to='base.Collection')),
                ('userid', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'video',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Imageurl',
            fields=[
                ('imageid', models.OneToOneField(db_column='imageid', on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='base.Image')),
                ('url', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'imageurl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Videoshot',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('startframe', models.IntegerField()),
                ('endframe', models.IntegerField()),
                ('videoid', models.ForeignKey(db_column='videoid', on_delete=django.db.models.deletion.PROTECT, to='base.Video')),
            ],
            options={
                'db_table': 'videoshot',
                'managed': True,
                'unique_together': {('startframe', 'videoid')},
            },
        ),
        migrations.CreateModel(
            name='Videointerval',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('startframe', models.IntegerField()),
                ('endframe', models.IntegerField()),
                ('videoid', models.ForeignKey(db_column='videoid', on_delete=django.db.models.deletion.PROTECT, to='base.Video')),
            ],
            options={
                'db_table': 'videointerval',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('trainingsetid', models.ForeignKey(db_column='trainingsetid', on_delete=django.db.models.deletion.PROTECT, related_name='training_set', to='base.Dataset')),
                ('validationsetid', models.ForeignKey(db_column='validationsetid', on_delete=django.db.models.deletion.PROTECT, related_name='validation_set', to='base.Dataset')),
            ],
            options={
                'db_table': 'model',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GroupDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=500)),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.Group')),
            ],
            options={
                'db_table': 'auth_group_description',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('datasetid', models.ForeignKey(db_column='datasetid', on_delete=django.db.models.deletion.PROTECT, to='base.Dataset')),
                ('modelid', models.ForeignKey(db_column='modelid', on_delete=django.db.models.deletion.PROTECT, to='base.Model')),
            ],
            options={
                'db_table': 'evaluation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('collectionid', models.ForeignKey(db_column='collectionid', on_delete=django.db.models.deletion.PROTECT, to='base.Collection')),
                ('concepttypeid', models.ForeignKey(blank=True, db_column='concepttypeid', null=True, on_delete=django.db.models.deletion.PROTECT, to='base.Concepttype')),
            ],
            options={
                'db_table': 'concept',
                'managed': True,
                'unique_together': {('name', 'collectionid')},
            },
        ),
        migrations.CreateModel(
            name='Videoframe',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField()),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.PROTECT, to='base.Image')),
                ('shotid', models.ForeignKey(db_column='shotid', on_delete=django.db.models.deletion.PROTECT, to='base.Videoshot')),
                ('videoid', models.ForeignKey(db_column='videoid', on_delete=django.db.models.deletion.PROTECT, to='base.Video')),
            ],
            options={
                'db_table': 'videoframe',
                'managed': True,
                'unique_together': {('number', 'videoid')},
            },
        ),
        migrations.CreateModel(
            name='Intervalconceptannotation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('difficult', models.BooleanField()),
                ('groundtruth', models.BooleanField()),
                ('startframe', models.IntegerField()),
                ('endframe', models.IntegerField()),
                ('conceptid', models.ForeignKey(db_column='conceptid', on_delete=django.db.models.deletion.PROTECT, to='base.Concept')),
                ('userid', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('videoid', models.ForeignKey(db_column='videoid', on_delete=django.db.models.deletion.PROTECT, to='base.Video')),
            ],
            options={
                'db_table': 'intervalconceptannotation',
                'managed': True,
                'unique_together': {('videoid', 'conceptid')},
            },
        ),
        migrations.CreateModel(
            name='Imageconceptprediction',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('score', models.FloatField()),
                ('conceptid', models.ForeignKey(db_column='conceptid', on_delete=django.db.models.deletion.PROTECT, to='base.Concept')),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.PROTECT, to='base.Image')),
                ('modelid', models.ForeignKey(db_column='modelid', on_delete=django.db.models.deletion.PROTECT, to='base.Model')),
            ],
            options={
                'db_table': 'imageconceptprediction',
                'managed': True,
                'unique_together': {('imageid', 'conceptid', 'modelid')},
            },
        ),
        migrations.CreateModel(
            name='Imageconceptannotation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('difficult', models.BooleanField()),
                ('groundtruth', models.BooleanField()),
                ('conceptid', models.ForeignKey(db_column='conceptid', on_delete=django.db.models.deletion.PROTECT, to='base.Concept')),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.PROTECT, to='base.Image')),
                ('userid', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'imageconceptannotation',
                'managed': True,
                'unique_together': {('imageid', 'conceptid')},
            },
        ),
        migrations.CreateModel(
            name='Datasetimage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datasetid', models.ForeignKey(db_column='datasetid', on_delete=django.db.models.deletion.PROTECT, to='base.Dataset')),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.PROTECT, to='base.Image')),
            ],
            options={
                'db_table': 'datasetimage',
                'managed': True,
                'unique_together': {('datasetid', 'imageid')},
            },
        ),
    ]
